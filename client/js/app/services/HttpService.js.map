{"version":3,"sources":["../../app-es6/services/HttpService.js"],"names":["HttpService","res","ok","Error","statusText","url","fetch","then","_handleErrors","json","dado","headers","method","body","JSON","stringify"],"mappings":";;;;;;IAAMA,W;;;;;;;sCACWC,G,EAAI;AACf,gBAAG,CAACA,IAAIC,EAAR,EAAY,MAAM,IAAIC,KAAJ,CAAUF,IAAIG,UAAd,CAAN;AACZ,mBAAOH,GAAP;AACF;;;4BACII,G,EAAK;AAAA;;AACP,mBAAOC,MAAMD,GAAN,EACJE,IADI,CACC;AAAA,uBACF,MAAKC,aAAL,CAAmBP,GAAnB,CADE;AAAA,aADD,EAGJM,IAHI,CAGC;AAAA,uBACDN,IAAIQ,IAAJ,EADC;AAAA,aAHD,CAAP;;AAMC;;;;;;;;;;;;;;;AAiBF;;;6BACIJ,G,EAAKK,I,EAAM;AAAA;;AACd,mBAAOJ,MAAMD,GAAN,EAAW;AAChBM,yBAAS,EAAC,gBAAiB,kBAAlB,EADO;AAEhBC,wBAAQ,MAFQ;AAGhBC,sBAAMC,KAAKC,SAAL,CAAeL,IAAf;AAHU,aAAX,EAKNH,IALM,CAKD;AAAA,uBAAO,OAAKC,aAAL,CAAmBP,GAAnB,CAAP;AAAA,aALC,CAAP;;AAOC;;;;;;;;;;;;;;;AAqBF;;;;;AAEL","file":"HttpService.js","sourcesContent":["class HttpService {\r\n   _handleErrors(res){\r\n      if(!res.ok) throw new Error(res.statusText);\r\n      return res;\r\n   }\r\n    get(url) {\r\n      return fetch(url)\r\n        .then(res =>\r\n            this._handleErrors(res))\r\n        .then(res => \r\n             res.json());\r\n\r\n       /* return new Promise((resolve, reject) => {\r\n\r\n            let xhr = new XMLHttpRequest();\r\n            xhr.open('GET', url);\r\n            xhr.onreadystatechange = () => {\r\n                if(xhr.readyState == 4) {\r\n                    if(xhr.status == 200) {\r\n                        resolve(JSON.parse(xhr.responseText));\r\n                    } else {\r\n                        console.log(xhr.responseText);\r\n                        reject(xhr.responseText);\r\n                    }\r\n                }\r\n            }\r\n\r\n            xhr.send();\r\n        }); */\r\n    }\r\n    post(url, dado) {\r\n      return fetch(url, {\r\n        headers: {'Content-type' : 'application/json'},\r\n        method: 'post',\r\n        body: JSON.stringify(dado)\r\n      })\r\n      .then(res => this._handleErrors(res));\r\n\r\n       /* return new Promise((resolve, reject) => {\r\n\r\n            let xhr = new XMLHttpRequest();\r\n            xhr.open(\"POST\", url, true);\r\n            xhr.setRequestHeader(\"Content-type\", \"application/json\");\r\n            xhr.onreadystatechange = () => {\r\n\r\n                if (xhr.readyState == 4) {\r\n\r\n                    if (xhr.status == 200) {\r\n\r\n                        resolve(JSON.parse(xhr.responseText));\r\n                    } else {\r\n\r\n                        reject(xhr.responseText);\r\n                    }\r\n                }\r\n            };\r\n            xhr.send(JSON.stringify(dado)); // usando JSON.stringifly para converter objeto em uma string no formato JSON.\r\n        });  */\r\n\r\n    }\r\n}\r\n/* service = new HttpService();\r\nservice.get('negociacoes/semana').then((negociacoes) =>{\r\n\r\n}); */"]}
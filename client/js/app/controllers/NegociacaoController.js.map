{"version":3,"sources":["../../app-es6/controllers/NegociacaoController.js"],"names":["NegociacaoController","$","document","querySelector","bind","_inputData","_inputQuantidade","_inputValor","_listaNegociacoes","Bind","ListaNegociacoes","NegociacoesView","_mensagem","Mensagem","MensagemView","_ordemAtual","_service","NegociacaoService","_init","lista","then","negociacoes","forEach","adiciona","negociacao","catch","console","log","erro","texto","error","setInterval","importaNegociacoes","event","preventDefault","_criaNegociacao","cadastra","mensagem","_limpaFormulario","importa","apaga","esvazia","Negociacao","DateHelper","textoParaData","value","parseInt","parseFloat","focus"],"mappings":"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","file":"NegociacaoController.js","sourcesContent":["// a arrow function tem o this léxico, ou seja, não precisa dar bind ou fazer o procedimento de Reflect.apply\r\nclass NegociacaoController {\r\n    constructor(){\r\n\r\n        let $ = document.querySelector.bind(document);  //bind para manter a associação com o document. O document é o this deste caso.\r\n        this._inputData =  $('#data');\r\n        this._inputQuantidade = $('#quantidade');\r\n        this._inputValor = $('#valor');\r\n\r\n        this._listaNegociacoes = new Bind(\r\n            new ListaNegociacoes(), \r\n            new NegociacoesView($('#negociacoesView')), \r\n            'adiciona', 'esvazia');\r\n       \r\n        this._mensagem = new Bind(\r\n            new Mensagem(), new MensagemView($('#mensagemView')),\r\n            'texto');       \r\n        \r\n        this._ordemAtual = '';\r\n        this._service = new NegociacaoService();\r\n        this._init();\r\n    \r\n    }\r\n    _init(){\r\n        this._service\r\n            .lista()\r\n            .then(negociacoes =>\r\n                negociacoes.forEach(negociacao =>\r\n                    this._listaNegociacoes.adiciona(negociacao)))\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                this._mensagem.texto = error;\r\n            });\r\n            setInterval(() =>{\r\n            this.importaNegociacoes();\r\n            }, 3000);\r\n    }\r\n    adiciona(event){\r\n      \r\n     \r\n    /*  let data = new Date(...  //spreed operator \"primeiro elemento array, primeiro parametro do constructor/function\"\r\n        this._inputData.value\r\n        .split('-')\r\n        .map((item,indice) => item - indice % 2) //arrow function, não precisa escrever function, pois a seta já indica function \r\n      );  */\r\n    \r\n      event.preventDefault();\r\n      \r\n      let negociacao = this._criaNegociacao();\r\n\r\n      this._service\r\n          .cadastra(negociacao)\r\n          .then((mensagem) => {\r\n            this._listaNegociacoes.adiciona(negociacao);\r\n            this._mensagem.texto = mensagem;\r\n            this._limpaFormulario();\r\n          })\r\n          .catch(erro => this._mensagem.texto = erro);\r\n\r\n      \r\n\r\n  }\r\n  importaNegociacoes(){\r\n    this._service\r\n    .importa(this._listaNegociacoes.negociacoes)\r\n    .then(negociacoes => negociacoes.forEach(negociacao => {\r\n        this._listaNegociacoes.adiciona(negociacao);\r\n        this._mensagem.texto = 'Negociações do período importadas'\r\n      }))\r\n    .catch(erro => this._mensagem.texto = erro);                 \r\n      /* service.obterNegociacoesDaSemana()\r\n         .then(negociacoes => {\r\n              negociacoes.forEach(negociacao => this._listaNegociacoes.adiciona(negociacao))\r\n              this._mensagem.texto = 'Negociaçlão da semana obtida com sucesso';\r\n          })\r\n          .catch(error => this._mensagem.texto = error);\r\n      service.obterNegociacoesDaSemanaAnterior()\r\n         .then(negociacoes => {\r\n              negociacoes.forEach(negociacao => this._listaNegociacoes.adiciona(negociacao))\r\n              this._mensagem.texto = 'Negociaçlão da semana obtida com sucesso';\r\n          })\r\n          .catch(error => this._mensagem.texto = error);\r\n      service.obterNegociacoesDaSemanaRetrasada()\r\n          .then(negociacoes => {\r\n               negociacoes.forEach(negociacao => this._listaNegociacoes.adiciona(negociacao))\r\n               this._mensagem.texto = 'Negociaçlão da semana obtida com sucesso';\r\n           })\r\n           .catch(error => this._mensagem.texto = error);\r\n             \r\n       \r\n      /* service.obterNegociacoesDaSemana((err,negociacoes) =>{\r\n         if(err) {\r\n             this._mensagem.texto = err;\r\n             return;\r\n         }\r\n         negociacoes.forEach(negociacao => this._listaNegociacoes.adiciona(negociacao));\r\n         service.obterNegociacoesDaSemanaAnterior((err, negociacoes) => {\r\n            if(err) {\r\n                this._mensagem.texto = err;\r\n                return;\r\n            }\r\n      \r\n            negociacoes.forEach(negociacao => this._listaNegociacoes.adiciona(negociacao));\r\n            service.obterNegociacoesDaSemanaRetrasada((err, negociacoes) => {\r\n                if(err) {\r\n                    this._mensagem.texto = err;\r\n                    return;\r\n                }\r\n        \r\n                negociacoes.forEach(negociacao => this._listaNegociacoes.adiciona(negociacao));\r\n                this._mensagem.texto = 'Negociações importadas com sucesso';\r\n           });       \r\n        });       \r\n     }); */\r\n   }\r\n    apaga(){\r\n        this._service\r\n            .apaga()\r\n            .then(mensagem => {\r\n                this._mensagem.texto = mensagem;\r\n                this._listaNegociacoes.esvazia();\r\n            })\r\n            .catch(erro => this._mensagem.texto = erro);\r\n       \r\n    }\r\n    _criaNegociacao(){\r\n        return new Negociacao(\r\n            DateHelper.textoParaData(this._inputData.value),\r\n            parseInt(this._inputQuantidade.value),\r\n            parseFloat(this._inputValor.value));\r\n    }\r\n    _limpaFormulario() {\r\n        this._inputData.value = '';\r\n        this._inputQuantidade.value = 1;\r\n        this._inputValor.value = 0.0;\r\n        this._inputData.focus();\r\n    }\r\n}"]}